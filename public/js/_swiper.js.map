{"version":3,"sources":["_swiper.js"],"names":["sliderInterval","rect","pathLength","sliderTimeout","posX1","posX2","BtnGroup","group","_this","this","_classCallCheck","buttonSpacing","buttons","Array","prototype","slice","call","querySelectorAll","slides","document","slideContainer","querySelector","style","width","length","createElementNS","svg","setAttribute","path","classList","add","currentPath","currentIndex","activateIndex","indexOf","appendChild","refreshPath","startRepeat","i","bipolarSlideItems","addEventListener","e","dragStart","dragAction","dragEnd","_loop","_createClass","key","value","stopRepeat","bipolarSliderItem","userSelect","getBoundingClientRect","clientX","left","console","log","_this2","contains","onClick","dispatchEvent","swipeTrigger","onmouseup","_this3","sliderTrigger","Event","push","setTimeout","_loop2","setInterval","_loop3","clearInterval","clearTimeout","index","srcElement","target","remove","str","removeClass","addClass","groups","$","parent","each","append","concat"],"mappings":"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","file":"_swiper.js","sourcesContent":["const pathLength = 39;\nlet sliderTimeout = [];\nlet sliderInterval;\nlet rect;\nlet posX1 = 0;\nlet posX2 = 0;\n\nconst BtnGroup = class BtnGroup {\n    constructor(group) {\n        this.buttonSpacing = 16;\n        this.group = group;\n        this.buttons = Array.prototype.slice.call(this.group.querySelectorAll('.fnv-btn'));\n        this.slides = Array.prototype.slice.call(document.querySelectorAll('.fnv-slide'));\n        this.slideContainer = document.querySelector('.fnv-slides');\n        this.bipolarSlideItems = document.querySelectorAll('.fnv-bipolarSliderItem');\n        this.slideContainer.style.width = this.slides.length + '00vw';\n        this.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        this.svg.setAttribute('viewbox', '0 0 ' + (this.buttonSpacing * this.buttons.length) + ' 16');\n        this.path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        this.path.classList.add('line');\n        this.currentPath = 'M ' + (-this.buttonSpacing / 2) + ', 14';\n        this.currentIndex = -1;\n        this.activateIndex(this.buttons.indexOf(this.group.querySelector('.fnv-active')));\n        this.group.appendChild(this.svg);\n        this.svg.appendChild(this.path);\n        this.refreshPath();\n        this.startRepeat(this.buttons);\n\n        for (let i = 0; i < this.buttons.length; i++) {\n            this.buttons[i].addEventListener('click', e => {\n                this.onClick(e);\n                this.stopRepeat();\n            });\n        }\n\n        for (let i = 0; i < this.bipolarSlideItems.length; i++) {\n            // Mouse events\n            this.bipolarSlideItems[i].addEventListener('mousedown', e => this.dragStart(e, this.bipolarSlideItems[i]));\n            this.bipolarSlideItems[i].addEventListener('mousemove', e => this.dragAction(e));\n            this.bipolarSlideItems[i].addEventListener('mouseup', e => this.dragEnd(e, this.buttons));\n            // Touch events\n            this.bipolarSlideItems[i].addEventListener('touchstart', e => this.dragStart(e, this.bipolarSlideItems[i]));\n            this.bipolarSlideItems[i].addEventListener('touchmove', e => this.dragAction(e));\n            this.bipolarSlideItems[i].addEventListener('touchend', e => this.dragEnd(e, this.buttons));\n        }\n    }\n\n    dragStart(e, bipolarSliderItem) {\n        this.stopRepeat();\n        bipolarSliderItem.style.userSelect = 'none';\n        rect = bipolarSliderItem.getBoundingClientRect();\n        posX1 = e.clientX - rect.left;\n    }\n\n    dragAction(e) {\n        console.log('inProcess');\n    }\n\n    dragEnd(e, buttons) {\n        posX2 = e.clientX - rect.left;\n        let swipeTrigger = new Event('swipeTrigger');\n\n        for (let i = 0; i < buttons.length; i++) {\n            if (buttons[i].classList.contains(`fnv-active`)) {\n                if (posX1 - posX2 > 0 && i + 1 < buttons.length) {\n                    buttons[i + 1].addEventListener('swipeTrigger', e => this.onClick(e));\n                    buttons[i + 1].dispatchEvent(swipeTrigger);\n                    break;\n                } else if (posX1 - posX2 < 0 && i - 1 >= 0) {\n                    buttons[i - 1].addEventListener('swipeTrigger', e => this.onClick(e));\n                    buttons[i - 1].dispatchEvent(swipeTrigger);\n                    break;\n                }\n            }\n        }\n\n        document.onmouseup = null;\n        document.onmousemove = null;\n    }\n\n    startRepeat(buttons) {\n        let sliderTrigger = new Event('sliderTrigger');\n\n        for (let i = 0; i < buttons.length; i++) {\n            buttons[i].addEventListener('sliderTrigger', e => this.onClick(e));\n\n            sliderTimeout.push(setTimeout((e) => buttons[i].dispatchEvent(sliderTrigger), i * 5000));\n        }\n\n        sliderInterval = setInterval((e) => {\n            for (let i = 0; i < buttons.length; i++) {\n                sliderTimeout.push(setTimeout((e) => buttons[i].dispatchEvent(sliderTrigger), i * 5000));\n            }\n        }, buttons.length * 5000);\n    }\n\n    stopRepeat() {\n        clearInterval(sliderInterval);\n        for (let i = 0; i < sliderTimeout.length; i++) {\n            clearTimeout(sliderTimeout[i]);\n        }\n    }\n\n    onClick(e) {\n        const index = this.buttons.indexOf(e.srcElement || e.target);\n        this.activateIndex(index);\n    }\n\n    refreshPath() {\n        this.path.setAttributeNS(null, 'd', this.currentPath);\n        this.path.style.strokeDashoffset = (-this.path.getTotalLength() + pathLength) * 0.9965;\n    }\n\n    center(index) {\n        return index * this.buttonSpacing + (this.buttonSpacing / 2);\n    }\n\n    removeClass(str) {\n        if (this.buttons[this.currentIndex]) {\n            this.buttons[this.currentIndex].classList.remove(str);\n        }\n    }\n\n    addClass(str) {\n        if (this.buttons[this.currentIndex]) {\n            this.buttons[this.currentIndex].classList.add(str);\n        }\n    }\n\n    activateIndex(index) {\n        this.slideContainer.style.left = -index + '00%';\n        this.removeClass('fnv-active');\n        this.currentIndex = index;\n        this.addClass('fnv-active');\n        this.refreshPath();\n    }\n};\n\nconst groups = Array.prototype.slice.call(document.querySelectorAll('.fnv-btn-group'));\n\nfor (const group of groups) {\n    $(group).parent().parent().find(`.fnv-slides .fnv-bipolarSliderItem`).each((i) => {\n        $(group).append(`<div class=\"fnv-btn${i === 0 ? ' fnv-active' : ''}\"></div>`)\n    });\n    new BtnGroup(group);\n}"]}